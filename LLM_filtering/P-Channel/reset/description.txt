Textual Description of P-Channel device reset:
"""
Device reset and initialization

At reset assertion, a device must set both PACCEPT and PDENY LOW. PACTIVE bits can be reset LOW or HIGH. If the device must enter a specific power state to process start-up operations, then the relevant PACTIVE bit can be reset HIGH. It is recommended that all PACTIVE bits are reset LOW.

To facilitate device initialization to a desired state at reset deassertion, the controller provides a PSTATE value that the device must sample before taking appropriate initialization actions. The protocol requires that PSTATE is stable when the reset deassertion is detected at the device.

The device must specify an initialization period tinit, which is the number of device clock cycles required after reset deassertion before the PSTATE value is guaranteed to be captured for all possible reset states.

A device must support all of the following valid controller behaviors during the initialization period.
• PREQ is LOW at reset deassertion. The controller waits until tinit has expired before requesting a transition to a new state. The controller must ensure an appropriate clock is running for the tinit period to allow PSTATE to be sampled.
• Before reset deassertion, the controller asserts PREQ HIGH, then waits until the P-Channel transition has completed before requesting a transition to a new state. It is recommended to use this method in preference to the PREQ LOW behavior for actively managed interfaces.
• PREQ is LOW at reset deassertion. After reset deassertion but before tinit has elapsed, the controller maintains the value of PSTATE and asserts PREQ HIGH. It is IMPLEMENTATION DEFINED whether the device interprets this as a second transition. The controller waits until the P-Channel transition has completed before requesting a transition to a new state.

On sampling PREQ HIGH at reset exit or during tinit, a device must only complete the P-Channel transition when it is ready to receive another P-Channel request. The device must accept the first request made at reset exit or during tinit.

Figure 3-4 shows the case where the controller waits until tinit has expired before issuing a new transition, followed by assertion of reset.
The transitions shown in Figure 3-4 are:
• At T0, the interface is idle and the device is in the reset state.
• Between T0 and T1, the power controller must take any pre-transition actions required before deasserting the reset, for example powering-on the domain.
• At T1, the power controller puts the current power state on PSTATE and releases the reset. The device must capture the PSTATE value within tinit. The controller must ensure that PSTATE is stable when the reset deassertion is detected by the device. A device sampling an initial PSTATE that is different from its default state, will cause the device to perform an internal transition to that state. It should delay responding to subsequent P-Channel requests until that internal transition is completed.
• At T2, tinit is complete and transitions to new states can be made.
• At T3, the controller requests that the device be placed in a state, STATE B, from which it can be safely returned to reset.
• Between T3 and T6, the device completes the transition.
• At T7, the reset is asserted.

Figure 3-5 shows the case where the controller sets PREQ HIGH before reset deassertion and then waits until the P-Channel transition is completed before issuing a further request. The device is guaranteed to be ready to receive another P-Channel request when this first transition completes, even if it completes within t_init.

Figure 3-6 shows the case where the controller sets PREQ HIGH after reset deassertion with the same PSTATE value as at reset deassertion. The controller waits until the P-Channel transition is complete before issuing a further request. The device is guaranteed to be ready to receive another P-Channel request when this first transition completes, even if it completes within t_init.
"""
