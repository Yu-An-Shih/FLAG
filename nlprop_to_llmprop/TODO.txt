TODO

AXI:
1. 
Still issues with valid-ready handshake and the assumption that the VALID and READY signals deassert after a data transfer

P-Channel:
1. 
• PSTATE can only transition when either:
— PREQ, PACCEPT, and PDENY are all LOW.
— PREQ and PDENY are both HIGH and PACCEPT is LOW.

The LLM seems to struggle with this property. This is the target property:
"If PDENY is LOW and PREQ is HIGH, then PSTATE remains stable in the next cycle."
Could it be looking for properties that include all three signals (PREQ, PACCEPT, PDENY)?

PCI:
1. 
For master termination, both the waveform and text do not contain the STOP# signal, and 
the relationship between TRDY# and STOP#
A possible solution is to merge target termination and master termination

APB:
1. 
During an Access phase, when PENABLE is HIGH, the Completer extends the transfer by driving PREADY LOW. The following signals remain unchanged while PREADY remains LOW:
• Address signal, PADDR
• Direction signal, PWRITE
• Select signal, PSELx
• Enable signal, PENABLE
• Write data signal, PWDATA
• Write strobe signal, PSTRB
• Protection type signal, PPROT
• User request attribute, PAUSER
• User write data attribute, PWUSER
PREADY can take any value when PENABLE is LOW. This ensures that peripherals that have a fixed two cycle access can tie PREADY HIGH.

The target property is:
If PENABLE == 0 and PSEL == 1 and PWRITE == 1, then $stable(PWDATA) in the next cycle.

The extracted property is:
"If PENABLE == 0 and PSEL == 1, then $stable(PWDATA) in the next cycle."

Does PWRITE have to be HIGH in order for PWDATA to be stable?
